{
	"compiler": {
		"version": "0.8.27+commit.40a35a09"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_wormholeRelayer",
						"type": "address"
					},
					{
						"internalType": "uint16",
						"name": "srcChainId",
						"type": "uint16"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "greeting",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint16",
						"name": "senderChain",
						"type": "uint16"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "GreetingReceived",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "_srcChainId",
				"outputs": [
					{
						"internalType": "uint16",
						"name": "",
						"type": "uint16"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "latestGreeting",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint16",
						"name": "targetChain",
						"type": "uint16"
					}
				],
				"name": "quoteCrossChainGreeting",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "cost",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "payload",
						"type": "bytes"
					},
					{
						"internalType": "bytes[]",
						"name": "",
						"type": "bytes[]"
					},
					{
						"internalType": "bytes32",
						"name": "sender",
						"type": "bytes32"
					},
					{
						"internalType": "uint16",
						"name": "sourceChain",
						"type": "uint16"
					},
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "receiveWormholeMessages",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint16",
						"name": "targetChain",
						"type": "uint16"
					},
					{
						"internalType": "address",
						"name": "targetAddress",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "greeting",
						"type": "string"
					}
				],
				"name": "sendMessage",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint16",
						"name": "chainId",
						"type": "uint16"
					},
					{
						"internalType": "address",
						"name": "peerContract",
						"type": "address"
					}
				],
				"name": "setPeer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "wormholeRelayer",
				"outputs": [
					{
						"internalType": "contract IWormholeRelayer",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Wormhole/WormholeCcm.sol": "WormholeCcm"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xde13f6ab310a659b9732f7f7ea3eed7c4d9925cc72e77e6554b2126563a143f0",
			"license": "MIT",
			"urls": [
				"bzz-raw://2176f1c5e871613bd6502558cc98d268e92167dcd546d15941587a670a48d4eb",
				"dweb:/ipfs/QmboYR7jbENha8ahFbWeHu2pHr5jjA9PuDzRDJHLvGDCBh"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"contracts/Wormhole/WormholeCcm.sol": {
			"keccak256": "0x8cf25fd763b57cb597c95106cc818ac18013ec899e125e32141759b3b2d30170",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://d088b52292a58ec1f23b39211c097c936f23ab0f7d16ef26249ec0040784f01c",
				"dweb:/ipfs/QmeR8aWTaC74fCKVsNGcsfe7We3eVxaMm68zULFZhXMcpq"
			]
		},
		"wormhole-solidity-sdk/Utils.sol": {
			"keccak256": "0xa8d3f11ba940552d13b7d2ad215a9bea4f7993bcebe8aa2d835268c3c5525411",
			"license": "Apache 2",
			"urls": [
				"bzz-raw://a85ba7b2441de43d15d7ea5567af5d550ae4324c099fb6c5b7e19b9f179998ae",
				"dweb:/ipfs/QmQepxbnguz9z5QaqMqctc1gY4druEswVnRXTgmQXGJKy2"
			]
		},
		"wormhole-solidity-sdk/interfaces/IWormholeReceiver.sol": {
			"keccak256": "0x3ba999db8099081accdc924c765ce2dbbaa0bd4ecd29d95a5bd537703740b832",
			"license": "Apache 2",
			"urls": [
				"bzz-raw://af8370ba3663400476871902811004559a28ab6106085b89e508b5d35a4950e6",
				"dweb:/ipfs/QmPBMBGDsSEYt5u3Yvhddv67RB6UqomJy1jBy1nPEHMdZN"
			]
		},
		"wormhole-solidity-sdk/interfaces/IWormholeRelayer.sol": {
			"keccak256": "0xa815a64ab0326cad1bc79475838d66f36f8b3e42478edbe61d0c2572c2316ff2",
			"license": "Apache 2",
			"urls": [
				"bzz-raw://3560d50c34358001253b67ac4cb5cbeb2ba822bf159d2aba3d6e9db89e64e26e",
				"dweb:/ipfs/QmRDT83KeHexLDyT6vauMietym9gLRQFGjzSJUWU7nZMp7"
			]
		}
	},
	"version": 1
}